# Lab 5

* *Date Created*: 01 Mar 2025
* *Last Modification Date*: 09 Mar 2025
* *Lab URL*: <http://example.com/>
* *Git URL*: <https://git.cs.dal.ca/amorse/csci3172/-/tree/main/labs/lab5?ref_type=heads>


## Authors

* Andrew Morse (amorse@dal.ca)


## Built With

<!--- Provide a list of the frameworks used to build this application, your list should include the name of the framework used, the url where the framework is available for download and what the framework was used for, see the example below --->

* [Bootstrap](https://getbootstrap.com/) - CSS framework
* [Express](https://expressjs.com/) - Used for API



## Sources Used
The only source used was code examples provided on Brightspace (https://dal.brightspace.com/d2l/le/content/361473/viewContent/4794291/View).
No external sources were used for this project

## Artificial Intelligence Tools Used
If in completing your lab / assignment / project you used any Artificial Intelligence Tools or Plugins, then provide a list of the tools or plugins used, the prompt used, the code generated by the AI, where the code was implemented, how it was implemented, why it was implemented, and how it was modified. See the sections below for more details.

* [ChatGPT](https://chatgpt.com/) - The AI Tool used


### Prompt Used on ChatGPT

```
    how to make an array out of this
    checked = document.querySelectorAll('input:checked')
    ...
    And get the values

```

The code prompt above was used [ChatGPT](https://chatgpt.com/) to generate the code shown below: 

```
let checkedArray = Array.from(document.querySelectorAll('input:checked'));
let values = checkedArray.map(input => input.value);
console.log(values);

```

#### scripts.js
*Lines 86*

```
checked = Array.from(document.querySelectorAll('input:checked')).map(input => input.value);

```

Because querySelectorAll returns a NodeList I couldn't mutate and access the data to support my goal. I used this AI tool to help me convert the results into an array and access the values stored within the check boxes.



## Acknowledgments

The Code on Brightspace was instrumental in helping me to get started with this project. Additionally, Hardison Wang was instrumental in helping me during the lab sessions to properly connect to the API I was using and debug my code.

This code was implemented using the Spoontacular API => https://spoonacular.com/food-api


## Description
This program runs a website that allows users to select diatary restrictions and then request meal inspiration based on the restrictions they provided. It was made using the spoonacular api (https://spoonacular.com/food-api), Bootstrap(https://getbootstrap.com/), ExpressJS (https://expressjs.com/), and NodeJS. In development, an issue I ran into was with the Spotify API. When I first started I wanted to follow the music recommendation path, but after consistent issues with the Spotify and MusicBrainz APIs I decided to pivot to the meal recommendation option. After talking with the course TAs we decided the best option would be to go forwards with the meal recommendation application rather than the music one. 

##Testing
I thuroughly tested this application using manual testing
Test cases were as follows

Test case 1:
- No dietary modifactions selected => application performed exactly as expected
When I prompted the application to generate meal recommendations based on no parameters it randomly selected 2 recipes with no restrictions to display to the user


Test case 2:
- Vegetarian
I tested the Vegetarian condition to confirm it worked. Results were expected. The application retured 2 recipes that matched the dietary restrictions

Test case 3:
- Vegan
I tested the Vegan condition to confirm it worked. Results were expected. The application retured 2 recipes that matched the dietary restrictions

Test case 4:
- Gluten Free
I tested the Gluten Free condition to confirm it worked. Results were expected. The application retured 2 recipes that matched the dietary restrictions

Test case 5:
- Dairy Free
I tested the Dairy Free condition to confirm it worked. Results were expected. The application retured 2 recipes that matched the dietary restrictions

Test case 6:
- Nut Free
I tested the Nut Free condition to confirm it worked. Results were expected. The application retured 2 recipes that matched the dietary restrictions


Test case 7:
- Paleo
I tested the Paleo condition to confirm it worked. Results were expected. The application retured 2 recipes that matched the dietary restrictions

Test case 8:
- All 6
When calling the API with all 6 parameters selected the application behaved as epxected. Because there is only one recipe that matches this condition, the expected recipe was returned. Additionally, the DOM was manipulated as expected => reduced page to have one recipe box rather than 2

Test case 9:
- 1 parameter => All 6 => no parameters
During this test I called the API with one parameter selected (6 times, one for each option). I then created a request with all 6 parameters selected, followed by an open request (no params). The application was able to keep up with this request. Each call provided a unique dietary reccomentaion while the DOM was manipulated as expected.

Test case 10:
- Stress testing => Continually calling the API to generate meals
For a minute straight I spammed the 'generate meal' button to keep calling the API for meal generations. The application was able to handle the heavy use and provide accurate reccomentaions with every keystroke.


Test case 11:
- No connection => When the connection between the front end and the backend fails behaviour is expected. An error alert is sent to the user and the error message is logged to the console. 

Test case 12:
- API issue - Change the URL to make sure the call fails
When there is an issue with the API call the error message is recorded and displayed to the User. If it is an error with the server a message explaining this to the user is explained requesting they try again later. 

Test case 13:
- I tested this by modifying the API call to ensure there was no matches.
If no recipe is found a message explaining that no recipe was found is displayed to the user